
# Do not edit this file below this point. Any changes will be overwritten.
#
# Example `test` command which will start and wait for all services before
# running tests:
#
# test: start wait
# 	bundle exec rspec
# 	yarn test app/javascript
# 	bundle exec rubocop
# 	yarn run eslint app/javascript
#
.PHONY: docker docker-build docker-push wait-database start

### Container management commands ###

start:
	docker-compose up -d

stop:
	docker-compose down

### Service healthcheck commands ###

wait: <%= config.fetch(:wait_commands) %>
	@echo "All Containers ready."

wait-database:
	@RAILS_ENV=test bundle exec rake orchestration:orchestration:db:wait

wait-mongo:
	@RAILS_ENV=test bundle exec rake orchestration:orchestration:mongo:wait

wait-rabbitmq:
	@RAILS_ENV=test bundle exec rake orchestration:orchestration:rabbitmq:wait

### Docker build commands ###

docker: docker-build docker-push

docker-build: VERSION := $(shell git rev-parse --short --verify master)
docker-build:
	mkdir -p ./docker/.build
	git show master:./Gemfile > ./docker/Gemfile
	git show master:./Gemfile.lock > ./docker/Gemfile.lock
	git archive --format tar.gz -o docker/.build/context.tar.gz master
	docker build --build-arg BUNDLE_GITHUB__COM --build-arg BUNDLE_BITBUCKET__ORG -t orchestrationdev/<%= config.fetch(:app_id) %>:${VERSION} ./docker/

docker-push: VERSION := $(shell git rev-parse --short --verify master)
docker-push:
	docker push orchestrationdev/<%= config.fetch(:app_id) %>:${VERSION}
